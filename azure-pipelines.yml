# PHP
# Test and package your PHP project.
# Add steps that run tests, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

trigger:
- master

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      phpVersion: 7.2

    steps:
    - script: |
        sudo update-alternatives --set php /usr/bin/php$(phpVersion)
        sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
        sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
        sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
        sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
        php -version
      displayName: 'Use PHP version $(phpVersion)'
    - task: CmdLine@2
      inputs:
        script: |
          mkdir $(Build.BinariesDirectory)/bin
          cp $(Build.SourcesDirectory)/code/*.php $(Build.BinariesDirectory)/bin
          cp $(Build.SourcesDirectory)/code/*.css $(Build.BinariesDirectory)/bin
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)/bin'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'drop'
        publishLocation: 'Container'
- stage: 'Dev'
  displayName: 'Deploy the web application to dev server'
  dependsOn: Build
  jobs:
  - template: deploy-stage-template.yml
    parameters:
      WebAppName: $(WebAppNameDev)
      WebAppRG: $(WebAppRGDev)
      TargetEnvironment: 'dev'
      ASPTemplateParametersPATH: 'arm-templates/parameters/dev/app_service_plan.json'
      AppServiceTemplateParametersPATH: 'arm-templates/parameters/dev/app_service.json'
      MysqlServerTemplateParametersPATH: 'arm-templates/parameters/dev/mysql_server.json'
      WebAppSqlServerName: 'gutimore-crud-app-mysql-server-dev'
      WebAppSqlServerUsername: $(WebAppSqlServerUsernameDev)
      WebAppSqlServerPassword: $(WebAppSqlServerPasswordDev)
      WebAppServerConnString: $(WebAppServerConnStringDev)
- stage: 'Preprod'
  displayName: 'Deploy the web application to preprod server'
  dependsOn: Dev
  jobs:
  - job: 'DeployInfrastructure'
    displayName: 'Deploy infrastructure job'
    pool:
      vmImage: 'ubuntu-16.04'
    variables:
    - group: 'Release'
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'AzureRmPipeline-conn'
        subscriptionId: 'c4477122-f0ae-41cd-be0f-33b12dedcb4d'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(WebAppRGPreprod)'
        location: 'East US'
        templateLocation: 'Linked artifact'
        csmFile: 'arm-templates/app_service_plan.json'
        csmParametersFile: 'arm-templates/parameters/preprod/app_service_plan.json'
        deploymentMode: 'Incremental'
        deploymentName: 'app-service-plan-deploy'
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'AzureRmPipeline-conn'
        subscriptionId: 'c4477122-f0ae-41cd-be0f-33b12dedcb4d'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(WebAppRGPreprod)'
        location: 'East US'
        templateLocation: 'Linked artifact'
        csmFile: 'arm-templates/app_service.json'
        csmParametersFile: 'arm-templates/parameters/preprod/app_service.json'
        deploymentMode: 'Incremental'
        deploymentName: 'app-service-plan-deploy'
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'AzureRmPipeline-conn'
        subscriptionId: 'c4477122-f0ae-41cd-be0f-33b12dedcb4d'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(WebAppRGPreprod)'
        location: 'East US'
        templateLocation: 'Linked artifact'
        csmFile: 'arm-templates/mysql_server.json'
        csmParametersFile: 'arm-templates/parameters/preprod/mysql_server.json'
        deploymentMode: 'Incremental'
        deploymentName: 'app-service-plan-deploy'
    - task: AzureMysqlDeployment@1
      inputs:
        azureSubscription: 'AzureRmPipeline-conn'
        ServerName: '$(WebAppServerNamePreprod)'
        DatabaseName: 'crud_app'
        SqlUsername: '$(WebAppSqlServerUsernamePreprod)'
        SqlPassword: '$(WebAppSqlPasswordPreprod)'
        TaskNameSelector: 'SqlTaskFile'
        SqlFile: 'sql/users.sql'
        IpDetectionMethod: 'AutoDetect'
  - deployment: Deploy
    dependsOn: 'DeployInfrastructure'
    pool:
      vmImage: 'ubuntu-16.04'
    environment: preprod
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'AzureRmPipeline-conn'
              appType: 'webAppLinux'
              WebAppName: '$(WebAppNamePreprod)'
              packageForLinux: '$(Pipeline.Workspace)/drop/*.zip'
          - task: AzureAppServiceSettings@1
            inputs:
              azureSubscription: 'AzureRmPipeline-conn'
              appName: '$(WebAppNamePreprod)'
              resourceGroupName: '$(WebAppRGPreprod)'
              connectionStrings: |
                [
                  {
                    "name": "connstring",
                    "value": $(ConnStringPreprod),
                    "type": "MySql",
                    "slotSetting": true
                  }
                ]