parameters:
- name: TargetEnvironment
  type: string

jobs:
  - deployment: DeployWeb
    displayName: 'Deploy job'
    pool:
      vmImage: 'vs2017-win2016'
    environment: ${{ parameters.TargetEnvironment }}
    variables:
      env: ${{ parameters.TargetEnvironment }}
      artifactFolder: '$(Pipeline.Workspace)/artifact'
    strategy: 
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: ExtractFiles@1
            displayName: 'Extract artifact folder'
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/drop/artifact*.zip'
              destinationFolder: '$(artifactFolder)'
              cleanDestinationFolder: true
          - task: qetza.replacetokens.replacetokens-task.replacetokens@3
            displayName: 'Replace variables in Ansible scripts'
            inputs:
              targetFiles: '$(artifactFolder)/*.yml'
              escapeType: none
              tokenPrefix: '__'
              tokenSuffix: '__'
          - task: CopyFilesOverSSH@0
            displayName: 'Copy webApp.zip to ansible vm'
            inputs:
              sshEndpoint: 'AnsibleVMSSHConn'
              sourceFolder: '$(artifactFolder)'
              contents: |
                webApp.zip
                packagename.txt
                users.sql
              targetFolder: '/tmp/deploy/'
              overwrite: true
          - task: Ansible@0
            displayName: 'Deploy infrastructure and webApp using ansible'
            inputs:
              ansibleInterface: 'remoteMachine'
              connectionOverSsh: 'AnsibleVMSSHConn'
              playbookSourceRemoteMachine: 'agentMachine'
              playbookRootRemoteMachine: '$(artifactFolder)'
              playbookPathLinkedArtifactOnRemoteMachine: 'playbook.yml'
              inventoriesRemoteMachine: 'hostList'
              inventoryHostListRemoteMachine: 'gutimore-ansible-controller.eastus.cloudapp.azure.com'
              failOnStdErr: false