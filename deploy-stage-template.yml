parameters:
- name: TargetEnvironment
  type: string

jobs:
- job: 'DeployInfrastructure'
  displayName: 'Deploy infrastructure job'
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
  - group: 'Release'
  steps:
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'AzureRmPipeline-conn'
      subscriptionId: 'c4477122-f0ae-41cd-be0f-33b12dedcb4d'
      action: 'Create Or Update Resource Group'
      resourceGroupName: 'gutimore-crud-app-${{ parameters.TargetEnvironment }}-rg'
      location: 'East US'
      templateLocation: 'Linked artifact'
      csmFile: 'arm-templates/app_service_plan.json'
      csmParametersFile: 'arm-templates/parameters/${{ parameters.TargetEnvironment }}/app_service_plan.json'
      deploymentMode: 'Incremental'
      deploymentName: 'app-service-plan-deploy'
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'AzureRmPipeline-conn'
      subscriptionId: 'c4477122-f0ae-41cd-be0f-33b12dedcb4d'
      action: 'Create Or Update Resource Group'
      resourceGroupName: 'gutimore-crud-app-${{ parameters.TargetEnvironment }}-rg'
      location: 'East US'
      templateLocation: 'Linked artifact'
      csmFile: 'arm-templates/app_service.json'
      csmParametersFile: 'arm-templates/parameters/${{ parameters.TargetEnvironment }}/app_service.json'
      deploymentMode: 'Incremental'
      deploymentName: 'app-service-plan-deploy'
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'AzureRmPipeline-conn'
      subscriptionId: 'c4477122-f0ae-41cd-be0f-33b12dedcb4d'
      action: 'Create Or Update Resource Group'
      resourceGroupName: 'gutimore-crud-app-${{ parameters.TargetEnvironment }}-rg'
      location: 'East US'
      templateLocation: 'Linked artifact'
      csmFile: 'arm-templates/mysql_server.json'
      csmParametersFile: 'arm-templates/parameters/${{ parameters.TargetEnvironment }}/mysql_server.json'
      deploymentMode: 'Incremental'
      deploymentName: 'app-service-plan-deploy'
  - task: AzureMysqlDeployment@1
    inputs:
      azureSubscription: 'AzureRmPipeline-conn'
      ServerName: 'gutimore-crud-app-mysql-server-${{ parameters.TargetEnvironment }}.mysql.database.azure.com'
      DatabaseName: 'crud_app'
      SqlUsername: $(WebAppSqlServerUsername_${{ parameters.TargetEnvironment }})
      SqlPassword: $(WebAppSqlServerPassword_${{ parameters.TargetEnvironment }})
      TaskNameSelector: 'SqlTaskFile'
      SqlFile: 'sql/users.sql'
      IpDetectionMethod: 'AutoDetect'
- deployment: Deploy
  dependsOn: 'DeployInfrastructure'
  pool:
    vmImage: 'ubuntu-16.04'
  environment: ${{ parameters.TargetEnvironment }}
  variables:
  - group: Release
  strategy:
    runOnce:
      deploy:
        steps:
        - download: current
          artifact: drop
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'AzureRmPipeline-conn'
            appType: 'webAppLinux'
            WebAppName: '${{ parameters.TargetEnvironment }}-gutimore-crud-app'
            packageForLinux: '$(Pipeline.Workspace)/drop/*.zip'
        - task: AzureAppServiceSettings@1
          inputs:
            azureSubscription: 'AzureRmPipeline-conn'
            appName: '${{ parameters.TargetEnvironment }}-gutimore-crud-app'
            resourceGroupName: 'gutimore-crud-app-${{ parameters.TargetEnvironment }}-rg'
            connectionStrings: |
              [
                {
                  "name": "connstring",
                  "value": $(WebAppServerConnString_${{ parameters.TargetEnvironment }}),
                  "type": "MySql",
                  "slotSetting": true
                }
              ]