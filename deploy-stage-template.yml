parameters:
- name: TargetEnvironment
  type: string

jobs:
  - deployment: DeployWeb
    displayName: 'Deploy job'
    pool:
      vmImage: 'vs2017-win2016'
    environment: ${{ parameters.TargetEnvironment }}
    variables:
      env: ${{ parameters.TargetEnvironment }}
    strategy: 
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: ExtractFiles@1
            displayName: 'Extract ansible folder'
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/drop/ansible*.zip'
              destinationFolder: '$(Pipeline.Workspace)/ansible'
              cleanDestinationFolder: true
          - task: qetza.replacetokens.replacetokens-task.replacetokens@3
            displayName: 'Replace variables in Ansible scripts'
            inputs:
              targetFiles: '$(Pipeline.Workspace)/ansible/*.yml'
              escapeType: none
              tokenPrefix: '__'
              tokenSuffix: '__'
          - task: CopyFilesOverSSH@0
            displayName: 'Copy webApp.zip to ansible vm'
            inputs:
              sshEndpoint: 'AnsibleVMSSHConn'
              sourceFolder: '$(Pipeline.Workspace)/drop'
              contents: 'webApp.zip'
              targetFolder: '/tmp/deploy/'
              overwrite: true
          - task: CopyFilesOverSSH@0
            displayName: 'Copy packagename.txt to ansible vm'
            inputs:
              sshEndpoint: 'AnsibleVMSSHConn'
              sourceFolder: '$(Pipeline.Workspace)/ansible/'
              contents: 'packagename.txt'
              targetFolder: '/tmp/deploy/'
          - task: Ansible@0
            displayName: 'Deploy infrastructure using ansible'
            inputs:
              ansibleInterface: 'remoteMachine'
              connectionOverSsh: 'AnsibleVMSSHConn'
              playbookSourceRemoteMachine: 'agentMachine'
              playbookRootRemoteMachine: '$(Pipeline.Workspace)/ansible'
              playbookPathLinkedArtifactOnRemoteMachine: 'playbook.yml'
              inventoriesRemoteMachine: 'hostList'
              inventoryHostListRemoteMachine: 'gutimore-ansible-controller.eastus.cloudapp.azure.com'
              failOnStdErr: false
          - task: AzureMysqlDeployment@1
            displayName: 'Deploy mysql server'
            inputs:
              azureSubscription: 'AzureRmPipeline-conn'
              ServerName: '$(mysqlServerName).mysql.database.azure.com'
              DatabaseName: '$(mysqlDbName)'
              SqlUsername: '$(mysqlUsername)@$(mysqlServerName)'
              SqlPassword: '$(mysqlPassword)'
              TaskNameSelector: 'SqlTaskFile'
              SqlFile: '$(Pipeline.Workspace)/drop/users.sql'
              IpDetectionMethod: 'AutoDetect'